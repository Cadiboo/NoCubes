# For info about AccessTransformers (and examples) read "https://mcforge.readthedocs.io/en/latest/advanced/accesstransformers/"
# In addition to the examples on the above page, there are 2 undocumented features that we can use:
# public foo.bar.Baz * # Applies to all fields
# public foo.bar.Baz *() # Applies to all methods

# We need access to the following classes/fields for chunk rendering
public net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$RenderChunk$RebuildTask # Turns chunks into renderable data
public net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$RenderChunk$ChunkCompileTask # Parent class of RebuildTask, must be public to prevent errors
public net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$CompiledChunk * # Metadata about the chunk renderable data
public net.minecraft.client.renderer.chunk.ChunkRenderDispatcher$RenderChunk m_112805_(Lcom/mojang/blaze3d/vertex/BufferBuilder;)V #

# Minecraft's code creates short-lived objects to apply matrix transforms on vectors
# This is inefficient so we access the fields of the matrices and do the transforms ourselves efficently
public com.mojang.math.Matrix3f * # m**
public com.mojang.math.Matrix4f * # m**

# Fluid rendering (for extended fluids) (indev)
public net.minecraft.client.renderer.block.LiquidBlockRenderer *()
public net.minecraft.client.renderer.block.LiquidBlockRenderer *

# Collisions
public net.minecraft.world.level.block.state.BlockBehaviour f_60443_ # hasCollision
